@model List<WebApplication3.Models.Spell>
@{
    ViewData["Title"] = "Magical Spells";
}

@section Styles {
    <style>
        /*<![CDATA[*/
        .magical-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(106, 27, 154, 0.05), rgba(156, 39, 176, 0.05));
            z-index: -1;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .hero {
            text-align: center;
            margin-bottom: 3rem;
            padding: 2rem 0;
        }

        .hero h1 {
            color: var(--color-primary);
            font-size: 3rem;
            margin-bottom: 1rem;
            font-weight: 700;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        .hero p {
            color: #666;
            font-size: 1.2rem;
            max-width: 600px;
            margin: 0 auto;
        }

        /* Enhanced Search Controls */
        .search-controls {
            max-width: 800px;
            margin: 3rem auto;
            padding: 2rem;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.1);
            backdrop-filter: blur(8px);
        }

        .search-box {
            position: relative;
            width: 100%;
            max-width: 500px;
            margin: 0 auto 2rem;
        }

        .search-input {
            width: 100%;
            padding: 1.2rem 3rem 1.2rem 1.5rem;
            border: 2px solid transparent;
            border-radius: 30px;
            background: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            font-size: 1.1rem;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--color-primary);
            box-shadow: 0 4px 20px rgba(106, 27, 154, 0.2);
        }

        .search-icon {
            position: absolute;
            right: 1.5rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--color-primary);
            font-size: 1.2rem;
        }

        /* Enhanced Filter Buttons */
        .filter-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            justify-content: center;
            padding: 0.5rem;
        }

        .filter-btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 25px;
            background: white;
            color: #666;
            font-family: 'Poppins', sans-serif;
            font-weight: 500;
            font-size: 0.95rem;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .filter-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
        }

        .filter-btn.active {
            background: var(--color-primary);
            color: white;
            box-shadow: 0 4px 15px rgba(106, 27, 154, 0.3);
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            .search-controls {
                padding: 1.5rem;
                margin: 2rem auto;
            }

            .filter-buttons {
                gap: 0.8rem;
            }

            .filter-btn {
                padding: 0.7rem 1.2rem;
                font-size: 0.9rem;
            }
        }

        .spells-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
            padding: 2rem 0;
        }

        .spell-card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            box-shadow: 8px 8px 16px rgba(94, 104, 121, 0.2),
                       -8px -8px 16px rgba(255, 255, 255, 0.8);
            transition: transform 0.3s ease;
        }

        .spell-card:hover {
            transform: translateY(-5px);
        }

        .spell-icon {
            font-size: 2rem;
            text-align: center;
            margin-bottom: 1rem;
        }

        .spell-card h3 {
            color: var(--color-primary);
            text-align: center;
            margin: 0;
            font-size: 1.3rem;
        }

        .spell-incantation {
            color: var(--color-secondary);
            font-style: italic;
            text-align: center;
            font-size: 0.9rem;
        }

        .spell-type {
            background: var(--bg-light);
            color: var(--color-primary);
            padding: 0.5rem 1rem;
            border-radius: 15px;
            text-align: center;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .spell-effect {
            color: #666;
            font-size: 0.95rem;
            line-height: 1.6;
            flex-grow: 1;
        }

        .spell-creator {
            color: #888;
            font-size: 0.9rem;
            font-style: italic;
        }

        .spell-properties {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-top: auto;
        }

        .spell-light {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            display: inline-block;
        }

        .verbal-indicator {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #666;
            font-size: 0.9rem;
        }

        @@keyframes cast-spell {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
        /*]]>*/
    </style>
}

<div class="magical-bg"></div>
<div class="container">
    <div class="hero">
        <h1>Magical Spells</h1>
        <p>Discover the vast collection of spells from the wizarding world</p>
        
        <div class="search-controls">
            <div class="search-box">
                <input type="text" id="spellSearch" placeholder="Search spells..." class="search-input">
                <i class="fas fa-search search-icon"></i>
            </div>
            <div class="filter-buttons" id="filterButtons">
                <button class="filter-btn active" data-type="all">All</button>
                <button class="filter-btn" data-type="Charm">Charms</button>
                <button class="filter-btn" data-type="Curse">Curses</button>
                <button class="filter-btn" data-type="Hex">Hexes</button>
                <button class="filter-btn" data-type="Jinx">Jinxes</button>
                <button class="filter-btn" data-type="Transfiguration">Transfiguration</button>
            </div>
        </div>
    </div>

    <div class="spells-grid" id="spellsContainer">
        @foreach (var spell in Model)
        {
            <div class="spell-card @(spell.Type?.ToLower() ?? "unknown")" data-type="@(spell.Type ?? "Unknown")" data-name="@(spell.Name?.ToLower() ?? "unknown")">
                <div class="spell-icon" style="color: @(spell.Light?.ToLower() ?? "transparent")">
                    @switch (spell.Type?.ToLower())
                    {
                        case "charm":
                            <i class="fas fa-wand-sparkles"></i>
                            break;
                        case "curse":
                            <i class="fas fa-skull"></i>
                            break;
                        case "hex":
                            <i class="fas fa-bolt"></i>
                            break;
                        case "jinx":
                            <i class="fas fa-ghost"></i>
                            break;
                        case "transfiguration":
                            <i class="fas fa-hat-wizard"></i>
                            break;
                        case "conjuration":
                            <i class="fas fa-star"></i>
                            break;
                        default:
                            <i class="fas fa-magic"></i>
                            break;
                    }
                </div>
                <h3>@spell.Name</h3>
                @if (!string.IsNullOrEmpty(spell.Incantation))
                {
                    <div class="spell-incantation">@spell.Incantation</div>
                }
                <div class="spell-type">@spell.Type</div>
                <p class="spell-effect">@spell.Effect</p>
                @if (!string.IsNullOrEmpty(spell.Creator))
                {
                    <div class="spell-creator">Created by: @spell.Creator</div>
                }
                <div class="spell-properties">
                    @if (spell.Light != null)
                    {
                        <span class="spell-light" style="background-color: @spell.Light.ToLower()"></span>
                    }
                    @if (spell.CanBeVerbal.HasValue)
                    {
                        <span class="verbal-indicator">
                            <i class="fas @(spell.CanBeVerbal.Value ? "fa-comment" : "fa-comment-slash")"></i>
                            @(spell.CanBeVerbal.Value ? "Verbal" : "Non-verbal")
                        </span>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Search and filter functionality
        const spellSearch = document.getElementById('spellSearch');
        const filterButtons = document.querySelectorAll('.filter-btn');
        const spellCards = document.querySelectorAll('.spell-card');
        
        let currentFilter = 'all';

        spellSearch.addEventListener('input', filterSpells);
        filterButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                filterButtons.forEach(btn => btn.classList.remove('active'));
                e.target.classList.add('active');
                currentFilter = e.target.dataset.type;
                filterSpells();
            });
        });

        function filterSpells() {
            const searchTerm = spellSearch.value.toLowerCase();
            
            spellCards.forEach(card => {
                const name = card.dataset.name;
                const type = card.dataset.type;
                const matchesSearch = name.includes(searchTerm);
                const matchesFilter = currentFilter === 'all' || type === currentFilter;
                
                card.style.display = matchesSearch && matchesFilter ? 'flex' : 'none';
            });
        }

        // Add hover animation
        spellCards.forEach(card => {
            card.addEventListener('mouseover', () => {
                const icon = card.querySelector('.spell-icon');
                icon.style.animation = 'cast-spell 1s ease-in-out';
            });
            
            card.addEventListener('animationend', () => {
                const icon = card.querySelector('.spell-icon');
                icon.style.animation = '';
            });
        });
    </script>
} 