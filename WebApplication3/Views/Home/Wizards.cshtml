@model List<WebApplication3.Models.Wizard>
@{
    ViewData["Title"] = "Famous Wizards";
}

@section Styles {
    <style>
        /*<![CDATA[*/
        .magical-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(106, 27, 154, 0.05), rgba(156, 39, 176, 0.05));
            z-index: -1;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .hero {
            text-align: center;
            margin-bottom: 3rem;
        }

        .hero h1 {
            color: var(--color-primary);
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }

        .hero p {
            color: #666;
            font-size: 1.1rem;
        }

        .search-controls {
            max-width: 800px;
            margin: 3rem auto;
            padding: 2rem;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.1);
            backdrop-filter: blur(8px);
            text-align: center;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .search-box {
            position: relative;
            width: 100%;
            max-width: 500px;
            margin: 0 auto 2rem;
        }

        .search-input {
            width: 100%;
            padding: 1.2rem 3rem 1.2rem 1.5rem;
            border: 2px solid transparent;
            border-radius: 30px;
            background: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            font-size: 1.1rem;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--color-primary);
            box-shadow: 0 4px 20px rgba(106, 27, 154, 0.2);
        }

        .search-icon {
            position: absolute;
            right: 1.5rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--color-primary);
            font-size: 1.2rem;
        }

        .wizards-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
            padding: 2rem 0;
        }

        .wizard-card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 8px 8px 16px rgba(94, 104, 121, 0.2),
                       -8px -8px 16px rgba(255, 255, 255, 0.8);
            transition: transform 0.3s ease;
        }

        .wizard-card:hover {
            transform: translateY(-5px);
        }

        .wizard-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .wizard-icon {
            width: 50px;
            height: 50px;
            background: var(--bg-light);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--color-primary);
            font-size: 1.5rem;
            box-shadow: 3px 3px 6px rgba(94, 104, 121, 0.2),
                       -3px -3px 6px rgba(255, 255, 255, 0.8);
        }

        .wizard-name {
            font-size: 1.5rem;
            color: var(--color-primary);
            margin: 0;
        }

        .elixirs-section {
            margin-top: 1.5rem;
        }

        .elixirs-title {
            color: var(--color-primary);
            font-size: 1rem;
            margin-bottom: 1rem;
        }

        .elixirs-list {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .elixir-tag {
            background: var(--bg-light);
            color: var(--color-primary);
            padding: 0.3rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            box-shadow: 3px 3px 6px rgba(94, 104, 121, 0.2),
                       -3px -3px 6px rgba(255, 255, 255, 0.8);
        }

        /* Enhanced Filter Buttons */
        .filter-section {
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            align-items: center;
        }

        .filter-label {
            font-size: 0.9rem;
            color: #666;
            margin-bottom: -0.5rem;
        }

        .filter-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 0.8rem;
            justify-content: center;
            padding: 0.5rem;
            width: 100%;
            max-width: 600px;
        }

        .filter-btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 25px;
            background: white;
            color: #666;
            font-weight: 500;
            font-size: 0.95rem;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .filter-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
        }

        .filter-btn.active {
            background: var(--color-primary);
            color: white;
            box-shadow: 0 4px 15px rgba(106, 27, 154, 0.3);
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            .wizards-grid {
                grid-template-columns: 1fr;
            }

            .search-controls {
                padding: 1.5rem;
            }

            .filter-buttons {
                flex-direction: column;
                width: 100%;
            }

            .filter-btn {
                width: 100%;
            }
        }
        /*]]>*/
    </style>
}

<div class="magical-bg"></div>
<div class="container">
    <div class="hero">
        <h1>Famous Wizards</h1>
        <p>Discover the remarkable witches and wizards who shaped the magical world</p>
        
        <div class="search-controls">
            <div class="search-box">
                <input type="text" id="wizardSearch" placeholder="Search wizards..." class="search-input">
                <i class="fas fa-search search-icon"></i>
            </div>
            
            <div class="filter-section">
                <div class="filter-label">Filter by Category</div>
                <div class="filter-buttons">
                    <button class="filter-btn active" data-filter="all">All Wizards</button>
                    <button class="filter-btn" data-filter="has-elixirs">Potion Masters</button>
                    <button class="filter-btn" data-filter="no-elixirs">Other Wizards</button>
                </div>
            </div>

            <div class="filter-section">
                <div class="filter-label">Sort by</div>
                <div class="filter-buttons">
                    <button class="filter-btn active" data-sort="name">Name</button>
                    <button class="filter-btn" data-sort="elixirs">Number of Elixirs</button>
                </div>
            </div>
        </div>
    </div>

    <div class="wizards-grid" id="wizardsContainer">
        @foreach (var wizard in Model)
        {
            <div class="wizard-card" data-name="@($"{wizard.FirstName} {wizard.LastName}".ToLower())">
                <div class="wizard-header">
                    <div class="wizard-icon">
                        <i class="fas fa-hat-wizard"></i>
                    </div>
                    <h2 class="wizard-name">@wizard.FirstName @wizard.LastName</h2>
                </div>

                @if (wizard.Elixirs != null && wizard.Elixirs.Any())
                {
                    <div class="elixirs-section">
                        <h3 class="elixirs-title">Known Elixirs</h3>
                        <div class="elixirs-list">
                            @foreach (var elixir in wizard.Elixirs)
                            {
                                <span class="elixir-tag">@elixir.Name</span>
                            }
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        const wizardSearch = document.getElementById('wizardSearch');
        const filterButtons = document.querySelectorAll('[data-filter]');
        const sortButtons = document.querySelectorAll('[data-sort]');
        const wizardCards = document.querySelectorAll('.wizard-card');
        
        let currentFilter = 'all';
        let currentSort = 'name';

        // Search and Filter functionality
        wizardSearch.addEventListener('input', filterAndSortWizards);
        
        filterButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                // Update active state of filter buttons
                filterButtons.forEach(btn => btn.classList.remove('active'));
                e.target.classList.add('active');
                currentFilter = e.target.dataset.filter;
                filterAndSortWizards();
            });
        });

        sortButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                // Update active state of sort buttons
                sortButtons.forEach(btn => btn.classList.remove('active'));
                e.target.classList.add('active');
                currentSort = e.target.dataset.sort;
                filterAndSortWizards();
            });
        });

        function filterAndSortWizards() {
            const searchTerm = wizardSearch.value.toLowerCase();
            const wizardsGrid = document.querySelector('.wizards-grid');
            const wizardCardsArray = Array.from(wizardCards);

            wizardCardsArray.forEach(card => {
                const name = card.querySelector('h3').textContent.toLowerCase();
                const elixirsList = card.querySelector('.elixirs-list');
                const hasElixirs = elixirsList && elixirsList.children.length > 0;

                // Apply search and category filters
                const matchesSearch = name.includes(searchTerm);
                const matchesFilter = 
                    currentFilter === 'all' || 
                    (currentFilter === 'has-elixirs' && hasElixirs) ||
                    (currentFilter === 'no-elixirs' && !hasElixirs);

                card.style.display = matchesSearch && matchesFilter ? 'block' : 'none';
            });

            // Sort visible cards
            const visibleCards = wizardCardsArray.filter(card => card.style.display !== 'none');
            visibleCards.sort((a, b) => {
                if (currentSort === 'name') {
                    const nameA = a.querySelector('h3').textContent.toLowerCase();
                    const nameB = b.querySelector('h3').textContent.toLowerCase();
                    return nameA.localeCompare(nameB);
                } else if (currentSort === 'elixirs') {
                    const elixirsA = a.querySelectorAll('.elixir-tag').length;
                    const elixirsB = b.querySelectorAll('.elixir-tag').length;
                    return elixirsB - elixirsA; // Sort by number of elixirs (descending)
                }
            });

            // Reorder cards in the DOM
            visibleCards.forEach(card => wizardsGrid.appendChild(card));
        }

        // Initial filter and sort
        filterAndSortWizards();

        // Add hover animation for wizard cards
        wizardCards.forEach(card => {
            card.addEventListener('mouseover', () => {
                const icon = card.querySelector('.wizard-icon');
                if (icon) {
                    icon.style.transform = 'scale(1.1) rotate(5deg)';
                    icon.style.transition = 'transform 0.3s ease';
                }
            });
            
            card.addEventListener('mouseout', () => {
                const icon = card.querySelector('.wizard-icon');
                if (icon) {
                    icon.style.transform = 'scale(1) rotate(0deg)';
                }
            });
        });
    </script>
} 